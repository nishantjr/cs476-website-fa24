
fmod NAT-ACU is
  sort Nat .
  ops 0 1 : -> Nat [ctor] .
  op _+'_ : Nat Nat -> Nat [ctor assoc comm id: 0] .
endfm

mod BAKERY is
  protecting NAT-ACU .

  sorts Mode BState .

  ops sleep wait crit : -> Mode [ctor] .
  op <_,_,_,_> : Mode Nat Mode Nat -> BState [ctor] .
  op initial : -> BState .

  vars P Q : Mode .
  vars X Y Z : Nat .

  eq initial = < sleep, 0, sleep, 0 > .
  
  rl [p1_sleep] : < sleep, X, Q, Y > => < wait, Y +' 1, Q, Y > [narrowing] .
  rl [p1_wait] : < wait, X, Q, 0 > => < crit, X, Q, 0 > [narrowing] .
  rl [p1_wait] : < wait, X, Q, X +' Y > => < crit, X, Q, Y +' X > [narrowing] .
  rl [p1_crit] : < crit, X, Q, Y > => < sleep, 0, Q, Y > [narrowing] .
  
  rl [p2_sleep] : < P, X, sleep, Y > => < P, X, wait, X +' 1  > [narrowing] .
  rl [p2_wait] : < P, 0, wait, Y > => < P, 0, crit, Y > [narrowing] .
  rl [p2_wait] : < P, X +' Y +' 1, wait, Y > => < P, X +' Y +' 1, crit, Y > [narrowing] .
  rl [p2_crit] : < P, X, crit, Y > => < P, X, sleep, 0 > [narrowing] .
endm
